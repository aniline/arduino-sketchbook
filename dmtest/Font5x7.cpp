#include "Arduino.h"
#include "Font5x7.h"

#define FONT_LEN 480

byte Font5x7[FONT_LEN] = {
   0x00, 0x01, 0x00, 0x3c, 0x12, 0x12, 0x3d, 0x00, 0x3e, 0x2a, 0x2a, 0x1d,
   0x00, 0x1c, 0x22, 0x22, 0x23, 0x00, 0x3e, 0x22, 0x22, 0x1d, 0x00, 0x3e,
   0x2a, 0x2a, 0x23, 0x00, 0x3e, 0x0a, 0x0a, 0x03, 0x00, 0x1c, 0x22, 0x2a,
   0x3b, 0x00, 0x3e, 0x08, 0x08, 0x3f, 0x00, 0x22, 0x3e, 0x23, 0x00, 0x30,
   0x20, 0x3f, 0x00, 0x3e, 0x08, 0x14, 0x23, 0x00, 0x3e, 0x20, 0x20, 0x21,
   0x00, 0x3e, 0x04, 0x08, 0x04, 0x3f, 0x00, 0x3e, 0x04, 0x08, 0x3f, 0x00,
   0x1c, 0x22, 0x22, 0x1d, 0x00, 0x3e, 0x0a, 0x0a, 0x05, 0x00, 0x1c, 0x22,
   0x32, 0x5d, 0x00, 0x3e, 0x0a, 0x0a, 0x35, 0x00, 0x24, 0x2a, 0x2a, 0x13,
   0x00, 0x02, 0x3e, 0x03, 0x00, 0x1e, 0x20, 0x20, 0x1f, 0x00, 0x1e, 0x20,
   0x18, 0x07, 0x00, 0x1e, 0x20, 0x10, 0x20, 0x1f, 0x00, 0x22, 0x14, 0x08,
   0x14, 0x23, 0x00, 0x02, 0x04, 0x38, 0x04, 0x03, 0x00, 0x32, 0x2a, 0x27,
   0x00, 0x38, 0x24, 0x1c, 0x21, 0x00, 0x3e, 0x24, 0x19, 0x00, 0x18, 0x24,
   0x25, 0x00, 0x18, 0x24, 0x3f, 0x00, 0x3c, 0x34, 0x2d, 0x00, 0x3c, 0x0a,
   0x0b, 0x00, 0x98, 0xa4, 0x7d, 0x00, 0x3e, 0x04, 0x39, 0x00, 0x3b, 0x00,
   0x80, 0x7b, 0x00, 0x3e, 0x08, 0x35, 0x00, 0x3f, 0x00, 0x3c, 0x04, 0x38,
   0x04, 0x39, 0x00, 0x3c, 0x04, 0x39, 0x00, 0x18, 0x24, 0x19, 0x00, 0xfc,
   0x24, 0x19, 0x00, 0x18, 0x24, 0xfd, 0x00, 0x3c, 0x08, 0x05, 0x00, 0x2c,
   0x24, 0x35, 0x00, 0x1e, 0x24, 0x25, 0x00, 0x3c, 0x20, 0x1c, 0x21, 0x00,
   0x1c, 0x20, 0x1d, 0x00, 0x1c, 0x20, 0x1c, 0x20, 0x3d, 0x00, 0x24, 0x18,
   0x25, 0x00, 0x9c, 0xa0, 0x7d, 0x00, 0x34, 0x2c, 0x2d, 0x00, 0x3c, 0x62,
   0x46, 0x3d, 0x00, 0x04, 0x7f, 0x00, 0x44, 0x62, 0x52, 0x4d, 0x00, 0x26,
   0x42, 0x4a, 0x37, 0x00, 0x38, 0x26, 0x70, 0x21, 0x00, 0x2e, 0x4a, 0x4a,
   0x33, 0x00, 0x3c, 0x4a, 0x4a, 0x33, 0x00, 0x02, 0x62, 0x1a, 0x07, 0x00,
   0x34, 0x4a, 0x4a, 0x35, 0x00, 0x24, 0x4a, 0x4a, 0x3d, 0x00, 0x04, 0xa2,
   0x12, 0x0d, 0x00, 0xbf, 0x00, 0x08, 0x08, 0x3e, 0x08, 0x09, 0x00, 0x3c,
   0x42, 0x5a, 0x5d, 0x00, 0x06, 0x00, 0x07, 0x00, 0x07, 0x00, 0x14, 0x3e,
   0x14, 0x3e, 0x15, 0x00, 0x14, 0x08, 0x3e, 0x08, 0x15, 0x00, 0x60, 0x18,
   0x07, 0x00, 0x06, 0x18, 0x61, 0x00, 0x21, 0x00, 0x61, 0x00, 0x08, 0x08,
   0x08, 0x09, 0x00, 0x7c, 0x83, 0x00, 0x82, 0x7d, 0x00, 0xfe, 0x83, 0x00,
   0x82, 0xff, 0x00, 0x10, 0x6c, 0x83, 0x00, 0x82, 0x6c, 0x11, 0x00, 0x28,
   0x28, 0x28, 0x29, 0x00, 0x08, 0x54, 0xfe, 0x54, 0x21, 0x00, 0x80, 0x80,
   0x80, 0x80, 0x81, 0x00, 0xff, 0x00, 0x25, 0x00, 0x65, 0x00, 0x08, 0x04,
   0x02, 0x04, 0x09, 0x00, 0x24, 0x10, 0x08, 0x25, 0x00, 0x34, 0x4a, 0x54,
   0x20, 0x51, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };

char Font5x7_chars[92] = " ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789?!+@\"'#*/\\.,-()[]{}=$_|:;^%&";
int Font5x7_idx[256];
int Font5x7_len[256];

int setup_Font5x7 () {
     char cur_char;
     int char_idx = 0;
     int col_idx = 0;
     int char_Font5x7_idx = 0;
     int char_Font5x7_len = 0;

     for (int i = 0; i<256; i++) {
         Font5x7_idx[i] = 0;
         Font5x7_len[i] = 2; /* Safe (space) value */
     }

     cur_char = Font5x7_chars[char_idx];
     for (; col_idx < FONT_LEN; col_idx ++) {
	  char v = Font5x7[col_idx];
	  if (v & 1) {
	       char_Font5x7_len = (col_idx - char_Font5x7_idx) + 1;
	       Font5x7_idx[(int)cur_char] = char_Font5x7_idx;
	       Font5x7_len[(int)cur_char] = char_Font5x7_len;

	       printf("Processed %c, idx = %d, len = %d\n", cur_char,
		      char_Font5x7_idx, char_Font5x7_len);
	       char_idx ++;
	       char_Font5x7_idx = col_idx + 1;
	       cur_char = Font5x7_chars[char_idx];
	  }
     }
     return 0;
}

int write_letter(byte *buffer, int buffer_size, char v, int offs) {
  int rc = 0;

  /* TODO: Avoid misuse */
  if (offs <= 0) memset(buffer, 0, buffer_size);

  for (int i=0; i<Font5x7_len[v]; i++) {
    if ((offs + i)>=buffer_size) {
      return -1;
    }
    buffer[offs + i] = 0xFE & (Font5x7[Font5x7_idx[v]+i]);
  }

  return Font5x7_len[v];
}

int write_string(byte *buffer, int buffer_size, char *str, int blit_offs) {
  int offs = blit_offs;
  int strsiz = strnlen(str, buffer_size);
  int i;
  int cols_used = 0;

  for (i = 0; i<strsiz; i++) {
    int cols = write_letter(buffer, buffer_size, str[i], offs);
    if (cols == -1) {
      return cols_used;
    } else {
      cols_used += cols;
      offs += cols;
    }
  }
  return cols_used;
}
